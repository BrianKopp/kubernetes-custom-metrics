apiVersion: v1
data:
  config.yaml: |
    rules:
    - seriesQuery: 'connection_count{namespace!="",pod!=""}'
      seriesFilters: []
      resources:
        template: <<.Resource>>
      name:
        matches: ""
        as: ""
      metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>}) by (<<.GroupBy>>)
    - seriesQuery: '{__name__=~"^container_.*",container_name!="POD",namespace!="",pod_name!=""}'
      seriesFilters: []
      resources:
        overrides:
          namespace:
            resource: namespace
          pod_name:
            resource: pod
      name:
        matches: ^container_(.*)_seconds_total$
        as: ""
      metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>,container_name!="POD"}[5m]))
        by (<<.GroupBy>>)
    - seriesQuery: '{__name__=~"^container_.*",container_name!="POD",namespace!="",pod_name!=""}'
      seriesFilters:
      - isNot: ^container_.*_seconds_total$
      resources:
        overrides:
          namespace:
            resource: namespace
          pod_name:
            resource: pod
      name:
        matches: ^container_(.*)_total$
        as: ""
      metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>,container_name!="POD"}[5m]))
        by (<<.GroupBy>>)
    - seriesQuery: '{__name__=~"^container_.*",container_name!="POD",namespace!="",pod_name!=""}'
      seriesFilters:
      - isNot: ^container_.*_total$
      resources:
        overrides:
          namespace:
            resource: namespace
          pod_name:
            resource: pod
      name:
        matches: ^container_(.*)$
        as: ""
      metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>,container_name!="POD"}) by (<<.GroupBy>>)
    - seriesQuery: '{namespace!="",__name__!~"^container_.*"}'
      seriesFilters:
      - isNot: .*_total$
      resources:
        template: <<.Resource>>
      name:
        matches: ""
        as: ""
      metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>}) by (<<.GroupBy>>)
    - seriesQuery: '{namespace!="",__name__!~"^container_.*"}'
      seriesFilters:
      - isNot: .*_seconds_total
      resources:
        template: <<.Resource>>
      name:
        matches: ^(.*)_total$
        as: ""
      metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>}[5m])) by (<<.GroupBy>>)
    - seriesQuery: '{namespace!="",__name__!~"^container_.*"}'
      seriesFilters: []
      resources:
        template: <<.Resource>>
      name:
        matches: ^(.*)_seconds_total$
        as: ""
      metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>}[5m])) by (<<.GroupBy>>)
kind: ConfigMap
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","data":{"config.yaml":"rules:\n- seriesQuery: 'connection_count{namespace!=\"\",pod!=\"\"}'\n  seriesFilters: []\n  resources:\n    template: \u003c\u003c.Resource\u003e\u003e\n  name:\n    matches: \"\"\n    as: \"\"\n  metricsQuery: um(\u003c\u003c.Series\u003e\u003e{\u003c\u003c.LabelMatchers\u003e\u003e}) by (\u003c\u003c.GroupBy\u003e\u003e)\n- seriesQuery: '{__name__=~\"^container_.*\",container_name!=\"POD\",namespace!=\"\",pod_name!=\"\"}'\n  seriesFilters: []\n  resources:\n    overrides:\n      namespace:\n        resource: namespace\n      pod_name:\n        resource: pod\n  name:\n    matches: ^container_(.*)_seconds_total$\n    as: \"\"\n  metricsQuery: sum(rate(\u003c\u003c.Series\u003e\u003e{\u003c\u003c.LabelMatchers\u003e\u003e,container_name!=\"POD\"}[5m]))\n    by (\u003c\u003c.GroupBy\u003e\u003e)\n- seriesQuery: '{__name__=~\"^container_.*\",container_name!=\"POD\",namespace!=\"\",pod_name!=\"\"}'\n  seriesFilters:\n  - isNot: ^container_.*_seconds_total$\n  resources:\n    overrides:\n      namespace:\n        resource: namespace\n      pod_name:\n        resource: pod\n  name:\n    matches: ^container_(.*)_total$\n    as: \"\"\n  metricsQuery: sum(rate(\u003c\u003c.Series\u003e\u003e{\u003c\u003c.LabelMatchers\u003e\u003e,container_name!=\"POD\"}[5m]))\n    by (\u003c\u003c.GroupBy\u003e\u003e)\n- seriesQuery: '{__name__=~\"^container_.*\",container_name!=\"POD\",namespace!=\"\",pod_name!=\"\"}'\n  seriesFilters:\n  - isNot: ^container_.*_total$\n  resources:\n    overrides:\n      namespace:\n        resource: namespace\n      pod_name:\n        resource: pod\n  name:\n    matches: ^container_(.*)$\n    as: \"\"\n  metricsQuery: sum(\u003c\u003c.Series\u003e\u003e{\u003c\u003c.LabelMatchers\u003e\u003e,container_name!=\"POD\"}) by (\u003c\u003c.GroupBy\u003e\u003e)\n- seriesQuery: '{namespace!=\"\",__name__!~\"^container_.*\"}'\n  seriesFilters:\n  - isNot: .*_total$\n  resources:\n    template: \u003c\u003c.Resource\u003e\u003e\n  name:\n    matches: \"\"\n    as: \"\"\n  metricsQuery: sum(\u003c\u003c.Series\u003e\u003e{\u003c\u003c.LabelMatchers\u003e\u003e}) by (\u003c\u003c.GroupBy\u003e\u003e)\n- seriesQuery: '{namespace!=\"\",__name__!~\"^container_.*\"}'\n  seriesFilters:\n  - isNot: .*_seconds_total\n  resources:\n    template: \u003c\u003c.Resource\u003e\u003e\n  name:\n    matches: ^(.*)_total$\n    as: \"\"\n  metricsQuery: sum(rate(\u003c\u003c.Series\u003e\u003e{\u003c\u003c.LabelMatchers\u003e\u003e}[5m])) by (\u003c\u003c.GroupBy\u003e\u003e)\n- seriesQuery: '{namespace!=\"\",__name__!~\"^container_.*\"}'\n  seriesFilters: []\n  resources:\n    template: \u003c\u003c.Resource\u003e\u003e\n  name:\n    matches: ^(.*)_seconds_total$\n    as: \"\"\n  metricsQuery: sum(rate(\u003c\u003c.Series\u003e\u003e{\u003c\u003c.LabelMatchers\u003e\u003e}[5m])) by (\u003c\u003c.GroupBy\u003e\u003e)\n"},"kind":"ConfigMap","metadata":{"annotations":{},"creationTimestamp":"2019-07-30T03:00:39Z","labels":{"app":"prometheus-adapter","chart":"prometheus-adapter-1.2.0","heritage":"Tiller","release":"prom-adpt"},"name":"prom-adpt-prometheus-adapter","namespace":"monitoring","resourceVersion":"2317","selfLink":"/api/v1/namespaces/monitoring/configmaps/prom-adpt-prometheus-adapter","uid":"3662147f-b276-11e9-887e-080027fcb04d"}}
  creationTimestamp: "2019-07-30T03:00:39Z"
  labels:
    app: prometheus-adapter
    chart: prometheus-adapter-1.2.0
    heritage: Tiller
    release: prom-adpt
  name: prom-adpt-prometheus-adapter
  namespace: monitoring
  resourceVersion: "3720"
  selfLink: /api/v1/namespaces/monitoring/configmaps/prom-adpt-prometheus-adapter
  uid: 3662147f-b276-11e9-887e-080027fcb04d
